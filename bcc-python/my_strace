#!/usr/bin/env python3

import os
import time
import subprocess
import argparse

parser = argparse.ArgumentParser(
        description="A version of strace using eBPF and tracepoints.")

parser.add_argument('cmd', help="The command to trace (in quotes).")
args = parser.parse_args()

"""

We don't want to wait within the parent--we want the child
and the parent to run (almost) simulataneously, so that we
can start tracing within the parent immediately.

"""
def main():
    newpid = os.fork()
   
    # Display the args for execve
    print(f"execve args: {args.cmd.split()}")

    if (newpid == 0):
        time.sleep(1)
        # We are within the child. Execute our command.
        # Don't display output of the command running within the child.
        subprocess.run(args.cmd.split(), stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    else:
        # We are within the parent (Parent PID, child PID)
        pids = (os.getpid(), newpid)
        print(f"Parent PID: {pids[0]}, Child PID: {pids[1]}")
        subprocess.run(["./tracepoint_raw_syscalls", "-p", str(newpid)])

if __name__ == '__main__':
    main()


